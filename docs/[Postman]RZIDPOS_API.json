{
	"info": {
		"_postman_id": "fc971fc0-a4b9-4fd0-b335-8ce7e8410fd0",
		"name": "pos_api-RZIDInc",
		"description": "documentation about using \"POS API\" RZIDInc",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Product",
			"item": [
				{
					"name": "Get Product",
					"item": [
						{
							"name": "Get Product",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/product",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"product"
									]
								},
								"description": "No search, no order (Sort by Id generated by database), limit only 3 data show (default), default page in 1"
							},
							"response": []
						},
						{
							"name": "Get Product Detail",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/productDetail/6",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"productDetail",
										"6"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Product (Search)",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "localhost:3000/product?searchLike=ca",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"product"
									],
									"query": [
										{
											"key": "searchLike",
											"value": "ca",
											"description": "Searching product name (query: \"SELECT * FROM product WHERE name LIKE  '%searchLike%'\"). The result will be limited"
										}
									]
								},
								"description": "Search method of showing product. SQL (\"select * from table where name like '%searchkey%'\"). Limit by 3 (default)"
							},
							"response": []
						},
						{
							"name": "Get Product (Pagination)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3000/product?page=3",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"product"
									],
									"query": [
										{
											"key": "page",
											"value": "3",
											"description": "The page defined current limited result pagination"
										}
									]
								},
								"description": "Make page query to showing data based on page and limitation"
							},
							"response": []
						},
						{
							"name": "Get Product (Order By)",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "order",
											"value": "name",
											"description": "The name of field for ordering (name, price, category)",
											"type": "text"
										},
										{
											"key": "orderMethod",
											"value": "ASC",
											"description": "The method (Only ASC and DESC)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3000/product",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"product"
									]
								},
								"description": "Ordering result of product"
							},
							"response": []
						},
						{
							"name": "Get Product (Limit)",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "limit",
											"value": "5",
											"description": "Limit of product showing in result",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3000/product",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"product"
									]
								},
								"description": "Manual limit of showing data from product table"
							},
							"response": []
						}
					]
				},
				{
					"name": "Add Product",
					"item": [
						{
							"name": "[OK] Add Product",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Wiener Schnitzel",
											"description": "Name of product",
											"type": "text"
										},
										{
											"key": "category",
											"value": "2",
											"description": "Category of product (related to tb_category)",
											"type": "text"
										},
										{
											"key": "price",
											"value": "69000",
											"description": "Price of product",
											"type": "text"
										},
										{
											"key": "image",
											"value": "wiener.jpg",
											"description": "(Optional) Image of product",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3000/product",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"product"
									]
								},
								"description": "Adding a product to tb_product"
							},
							"response": []
						},
						{
							"name": "[Err] Add Product (Not Complete)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Matcha",
											"type": "text"
										},
										{
											"key": "price",
											"value": "20000",
											"type": "text"
										},
										{
											"key": "image",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "category",
											"value": "2",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "localhost:3000/product",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"product"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Err] Add Product (Category Not Exist!)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Arabica Coffee",
											"description": "Name product (Creative Input) based on form",
											"type": "text"
										},
										{
											"key": "price",
											"value": "30000",
											"description": "Price of product (Creative Input) based on form",
											"type": "text"
										},
										{
											"key": "category",
											"value": "99",
											"description": "Category related to tb_category, so value can't be creative plain text",
											"type": "text"
										},
										{
											"key": "image",
											"value": "arabica.jpg",
											"description": "Image of product (Optional)",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3000/product",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"product"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete Product",
					"item": [
						{
							"name": "[Err] Delete Product (ID Not found)",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:3000/product/11",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"product",
										"11"
									]
								}
							},
							"response": []
						},
						{
							"name": "[OK] Delete Product",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:3000/product/1",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"product",
										"1"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Product",
					"item": [
						{
							"name": "[OK] Update All",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Greentea Latte",
											"type": "text"
										},
										{
											"key": "price",
											"value": "9000",
											"type": "text"
										},
										{
											"key": "category",
											"value": "1",
											"type": "text"
										},
										{
											"key": "image",
											"value": "greentea.jpg",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3000/product/6",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"product",
										"6"
									]
								}
							},
							"response": []
						},
						{
							"name": "[OK] Update Patch",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Greentea Latte",
											"type": "text",
											"disabled": true
										},
										{
											"key": "price",
											"value": "9000",
											"type": "text",
											"disabled": true
										},
										{
											"key": "category",
											"value": "1",
											"type": "text",
											"disabled": true
										},
										{
											"key": "image",
											"value": "greentea.jpg",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3000/product/6",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"product",
										"6"
									]
								}
							},
							"response": []
						},
						{
							"name": "[Err] Update Patch (ID Not Found)",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "Greentea Latte",
											"type": "text"
										},
										{
											"key": "price",
											"value": "9000",
											"type": "text"
										},
										{
											"key": "category",
											"value": "1",
											"type": "text"
										},
										{
											"key": "image",
											"value": "greentea.jpg",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3000/product/19",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"product",
										"19"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "[OK] Get All Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3000/category",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "[OK] Add Category",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Appertizer",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:3000/category",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"category"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/category/6",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"category",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Category",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "Soft Drink",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:3000/category/7",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"category",
								"7"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "History",
			"item": [
				{
					"name": "Get History",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "limit",
									"value": "5",
									"description": "Limitation (Optional)",
									"type": "text",
									"disabled": true
								},
								{
									"key": "where",
									"value": "cashier",
									"description": "Where table (Optional) If is set, it's request whereVal else, will be return without search\n ",
									"type": "text",
									"disabled": true
								},
								{
									"key": "whereVal",
									"value": "yoga",
									"description": "Where value (Optional) If is set, it's request where else will be return without search",
									"type": "text",
									"disabled": true
								},
								{
									"key": "orderBy",
									"value": "amount",
									"description": "Ordering table (Optional) If is set, it's request orderMethod else will be returning value without ordering",
									"type": "text",
									"disabled": true
								},
								{
									"key": "orderMethod",
									"value": "asc",
									"description": "Ordering method (Optional) If is set, it's request orderBy else will be returning value without ordering (Only: asc and desc are allowed. else will return without ordering)",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "localhost:3000/history",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"history"
							],
							"query": [
								{
									"key": "page",
									"value": "2",
									"description": "(Optional) Pagination",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add History",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "cashier",
									"value": "Pevita Pearce",
									"type": "text"
								},
								{
									"key": "product",
									"value": "3,3,3,3,1,1,1,1,1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:3000/history",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Err] Add History (ID Product Not Found)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "cashier",
									"value": "Cashier 1",
									"type": "text"
								},
								{
									"key": "product",
									"value": "2,2,2,3,1,3,200, ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:3000/history",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update History",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "cashier",
									"value": "Pak Ujang",
									"type": "text",
									"disabled": true
								},
								{
									"key": "product",
									"value": "(((1,2)",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:3000/history/2",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"history",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete History",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "localhost:3000/history/2",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"history",
								"2"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}